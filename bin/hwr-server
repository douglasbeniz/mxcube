#!/usr/bin/env python
import sys, os.path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)), "..")))
import getopt
from HardwareRepository.Server import HardwareRepositorySpecServer
from HardwareRepository.Server import Daemonize

def usage():
     print 'Usage:\n ', sys.argv[0], '<Hardware Repository directory>\nParameters:\n  -n NAME, --server-name=NAME\tdefaults to "hwr"\n  --daemon\t\t\trun as a daemon\n  -h, --help\t\t\tdisplay usage'

try:
     opts, args = getopt.gnu_getopt(sys.argv[1:], "hn:", ["help", "daemon", "server-name="])
except getopt.GetoptError:
     # print help information and exit
     usage()
     sys.exit(2)

nodaemon = True
serverName = 'hwr'

for o, a in opts:
     if o in ("-n", "--server-name"):
          try:
              serverName = int(a)
          except:
              serverName = str(a)
     elif o == "--daemon":
          nodaemon = False
     elif o in ("-h", "--help"):
          usage()
          sys.exit()

if not len(args) == 1:
     usage()
     sys.exit(2)
else:
     hardwareRepositoryPath = os.path.abspath(args[0])
     if not os.path.exists(hardwareRepositoryPath):
          print hardwareRepositoryPath, 'does not exist.'
          sys.exit(2)

# create server
#server = HardwareRepositorySpecServer( socket.gethostbyaddr(socket.gethostname())[0], serverName )
server = HardwareRepositorySpecServer("", serverName)

server.setDirectory(hardwareRepositoryPath)

if not nodaemon:
     Daemonize.daemonize()

print "Starting Hardware Repository server, hardware objects path=%s" % hardwareRepositoryPath

server.serve_forever()

